{"version":3,"sources":["components/Login/LoginReduxForm/LoginReduxForm.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"names":["LoginReduxForm","reduxForm","form","props","onSubmit","handleSubmit","Field","component","InputLogin","className","placeholder","name","validate","required","type","error","captchaUrl","src","Login","isAuth","to","formData","login","captcha","email","password","rememberMe","connect","state","auth","dispatch"],"mappings":"mNA6CaA,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAzCZ,SAAAE,GACjB,OACC,uBAAMC,SAAUD,EAAME,aAAtB,UACC,cAACC,EAAA,EAAD,CACCC,UAAWC,IACXC,UAAU,mBACVC,YAAY,QACZC,KAAK,QACLC,SAAU,CAACC,OAEZ,cAACP,EAAA,EAAD,CACCC,UAAWC,IACXC,UAAU,mBACVC,YAAY,WACZC,KAAK,WACLC,SAAU,CAACC,KACXC,KAAK,aAELX,EAAMY,OACN,qBAAKN,UAAU,+BAAf,SAA+CN,EAAMY,QAEtD,sBAAKN,UAAU,mBAAf,UACC,cAACH,EAAA,EAAD,CAAOC,UAAU,QAAQO,KAAK,WAAWH,KAAK,eAD/C,iBAKCR,EAAMa,YAAc,qBAAKC,IAAKd,EAAMa,aACpCb,EAAMa,YACN,cAACV,EAAA,EAAD,CACCC,UAAWC,IACXC,UAAU,mBACVC,YAAY,qBACZC,KAAK,UACLC,SAAU,CAACC,OAGb,iDChBYK,EApBD,SAAAf,GAUb,OAAIA,EAAMgB,OAAe,cAAC,IAAD,CAAUC,GAAG,aAGrC,gCACC,4CACA,cAACpB,EAAD,CAAgBgB,WAAYb,EAAMa,WAAYZ,SAd/B,SAAAiB,GAChBlB,EAAMmB,MACLD,EAASE,QACTF,EAASG,MACTH,EAASI,SACTJ,EAASK,mBCoBGC,uBAfS,SAAAC,GACvB,MAAO,CACNT,OAAQS,EAAMC,KAAKV,OACnBH,WAAYY,EAAMC,KAAKb,eAIE,SAAAc,GAC1B,MAAO,CACNR,MAAO,SAACE,EAAOC,EAAUC,GACxBI,EAASR,YAAME,EAAOC,EAAUC,QAKpBC,EAzBQ,SAAAxB,GACtB,OACC,cAAC,EAAD,CACCa,WAAYb,EAAMa,WAClBM,MAAOnB,EAAMmB,MACbH,OAAQhB,EAAMgB","file":"static/js/3.2ce0bc9c.chunk.js","sourcesContent":["import { Field, reduxForm } from 'redux-form';\r\nimport { InputLogin } from '../../../reduxForm/FormComponents/FormComponents';\r\nimport { required } from '../../../reduxForm/validators';\r\n\r\nconst LoginForm = props => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<Field\r\n\t\t\t\tcomponent={InputLogin}\r\n\t\t\t\tclassName=\"login__form-item\"\r\n\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\tname=\"email\"\r\n\t\t\t\tvalidate={[required]}\r\n\t\t\t/>\r\n\t\t\t<Field\r\n\t\t\t\tcomponent={InputLogin}\r\n\t\t\t\tclassName=\"login__form-item\"\r\n\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\tname=\"password\"\r\n\t\t\t\tvalidate={[required]}\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t/>\r\n\t\t\t{props.error && (\r\n\t\t\t\t<div className=\"validate__login_invalid-data\">{props.error}</div>\r\n\t\t\t)}\r\n\t\t\t<div className=\"login__form-item\">\r\n\t\t\t\t<Field component=\"Input\" type=\"checkbox\" name=\"rememberMe\" />\r\n\t\t\t\tremember me\r\n\t\t\t</div>\r\n\r\n\t\t\t{props.captchaUrl && <img src={props.captchaUrl}></img>}\r\n\t\t\t{props.captchaUrl && (\r\n\t\t\t\t<Field\r\n\t\t\t\t\tcomponent={InputLogin}\r\n\t\t\t\t\tclassName=\"login__form-item\"\r\n\t\t\t\t\tplaceholder=\"Symbols from image\"\r\n\t\t\t\t\tname=\"captcha\"\r\n\t\t\t\t\tvalidate={[required]}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<button>Login</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport const LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { LoginReduxForm } from './LoginReduxForm/LoginReduxForm';\r\n\r\nconst Login = props => {\r\n\tconst onSubmit = formData => {\r\n\t\tprops.login(\r\n\t\t\tformData.captcha,\r\n\t\t\tformData.email,\r\n\t\t\tformData.password,\r\n\t\t\tformData.rememberMe\r\n\t\t);\r\n\t};\r\n\r\n\tif (props.isAuth) return <Redirect to=\"/profile\" />;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>LOGIN FORM</h1>\r\n\t\t\t<LoginReduxForm captchaUrl={props.captchaUrl} onSubmit={onSubmit} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport Login from './Login';\r\n\r\nconst LoginContainer = props => {\r\n\treturn (\r\n\t\t<Login\r\n\t\t\tcaptchaUrl={props.captchaUrl}\r\n\t\t\tlogin={props.login}\r\n\t\t\tisAuth={props.isAuth}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth,\r\n\t\tcaptchaUrl: state.auth.captchaUrl,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tlogin: (email, password, rememberMe) => {\r\n\t\t\tdispatch(login(email, password, rememberMe));\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);\r\n"],"sourceRoot":""}